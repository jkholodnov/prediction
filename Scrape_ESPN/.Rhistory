text(Rcol[,1:2],labels=c("a","b","c","d"),cex=.9,col=4)
Rsym = RRow; round(Rsym,2)
Csym = Rcol;round(Csym,2)
plot(0,type="n",xlab = "x", ylab = "y", lim=c(-1,1));text(Rsym,labels=1:nrow(Rsym))
plot(0,type="n",xlab = "x", ylab = "y", xlim=c(-1,1));text(Rsym,labels=1:nrow(Rsym))
nrow(Csym)
text(Csym[,1:2],labels=c("a","b","c","d"),col=4);abline(h=0,lty=2);abline(v=0,lty=2)
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
text(Csym[,1:2],labels=c("a","b","c","d"),col=4);abline(h=0,lty=2);abline(v=0,lty=2)
###################################################
text(Csym[,1:2],labels=c("a","b","c","d"),col=4);abline(h=0,lty=2);abline(v=0,lty=2)
###################################################
###################################################
###################################################
text(Csym[,1:2],labels=c("a","b","c","d"),col=4);abline(h=0,lty=2);abline(v=0,lty=2)
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
###################################################
library(MASS)
R = c(0.23,0.22,0.20,0.20,0.15)
C = c(0.28,0.30,0.20,0.22)
##STARTING C##
data = matrix(c(9,10,3,5,1,7,7,7,4,5,3,1,3,7,6,4,4,7,4,3),nrow=5,ncol=4)
P = data / 100;P
Pr = diag(1/R)%*%P;Pr
Pc = diag(1/C)%*%t(P);Pc
##STARTING D##
E = R%*%t(C);E
##STARTING E##
W = diag(1/sqrt(R))%*%P%*%diag(1/sqrt(C)); round(W,3)
Wm = diag(1/sqrt(R))%*%(P-cbind(R) %*% rbind(C)) %*% diag(1/sqrt(C));round(Wm,3)
round(W%*%t(W)%*%sqrt(R)-sqrt(R),8)
round(t(W)%*%W%*%sqrt(C)-sqrt(C),8)
##STARTING F##
lapply(svd(W),round,2)
E = svd(W)$v[,-1];E
U = svd(W)$u[,-1];U
Lhalf = svd(W)$d[-1];Lhalf
Wmtilde = Lhalf[1]*U[,1]%*%t(E[,1]); Wmtilde
sum((Wm-Wmtilde)^2)
Wmhat = Wmtilde + Lhalf[2]*U[,2]%*%t(E[,2]); Wmhat
##STARTING G##
Ps = diag(1/R)%*%P%*%diag(1/sqrt(C));Ps
Ps%*%E
Fr = Ps%*%E;Fr
Shep = Shepard(dist(Ps),cbind(Fr[,1]));Shep
stress = sqrt(sum((Shep$y-Shep$yf)^2)/sum(Shep$y^2));stress
##STARTING H##
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(C))%*%E;CRow
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
##########################################################
##Re-evaluating variables for our Column Principle plot.##
##########################################################
t(data)
Pt = t(data)/100;round(Pt,2);Pt
Pts = diag(1/C)%*%Pt%*%diag(1/sqrt(R));Pts
Wt = diag(1/sqrt(C))%*%Pt%*%diag(1/sqrt(R));Wt
Wtm = diag(1/sqrt(C))%*%(Pt-cbind(C)%*%rbind(R))%*%diag(1/sqrt(R));Wtm
##Acquiring coordinates for row profiles##
Rcol = Pts%*%U;Rcol
Ccol = diag(1/sqrt(R))%*%U;Ccol
plot(Ccol[,1:2],type="n",xlab="X",ylab="Y");text(Ccol,labels=1:nrow(Ccol))
text(Rcol[,1:2],labels=c("a","b","c","d"),cex=.9,col=4)
###################################################
##Re-evaluating variables for our Symmetric plot.##
###################################################
Rsym = RRow; round(Rsym,2)
Csym = Rcol;round(Csym,2)
plot(Ccol[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle");text(Ccol,labels=1:nrow(Ccol))
text(Rcol[,1:2],labels=c("a","b","c","d"),cex=.9,col=4)
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(C))%*%E;CRow
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
plot(Ccol[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle");text(Ccol,labels=1:nrow(Ccol))
text(Rcol[,1:2],labels=c("a","b","c","d"),cex=.9,col=4)
plot(Ccol[,1:2],type="n",xlab="X",ylab="Y",main="Column Principle");text(Ccol,labels=1:nrow(Ccol))
text(Rcol[,1:2],labels=c("a","b","c","d"),cex=.9,col=4)
plot(0,type="n",xlab = "x", ylab = "y", xlim=c(-1,1),);text(Rsym,labels=1:nrow(Rsym))
text(Csym[,1:2],labels=c("a","b","c","d"),col=4);abline(h=0,lty=2);abline(v=0,lty=2)
plot(0,type="n",xlab = "x", ylab = "y", xlim=c(-1,1),main="Symmetric");text(Rsym,labels=1:nrow(Rsym))
text(Csym[,1:2],labels=c("a","b","c","d"),col=4);abline(h=0,lty=2);abline(v=0,lty=2)

library(ca)
install.packages("ca")
library(ca)
plot(ca(data),map="symmetric")
title("Symmetric CA")
plot(ca(data),map="rowprinciple")
plot(ca(data),map="rowprincipal")
plot(ca(data),map="colprincipal")
title("Row Principal CA")
plot(ca(data),map="rowprincipal")
title("Row Principal CA")
##STARTING I##
plot(ca(data),map="rowprincipal")
title("Row Principal CA")
plot(ca(data),map="colprincipal")
title("Col Principal CA")
plot(ca(data),map="symmetric")
title("Symmetric CA")
plot(ca(data),map="colprincipal")
title("Col Principal CA")
plot(ca(data),map="rowprincipal")
title("Row Principal CA")
The values in the parenthesis represent the Eigenvalues.
Lhalf^2
Lhalf^2/sum(Lhalf^2)
#The values in the parenthesis represent the Eigenvalues.
Lhalf^2
Lhalf^2/sum(Lhalf^2)
We see that the majority of the eigenvalues are weighted towards the front of the list. This means that the first Eigenvalue is the most consequential.
#We see that the majority of the eigenvalues are weighted towards the front of the list. This means that the first Eigenvalue is the most consequential.
##STARTING J##
#The values in the parenthesis represent the Eigenvalues.
Lhalf^2
Lhalf^2/sum(Lhalf^2)
#We see that the majority of the eigenvalues are weighted towards the front of the list. This means that the first Eigenvalue is the most consequential.
round(diag(Wm%*%t(Wm)),5)
round(sum(diag(Wm%*%t(Wm))*nrow(Wm)),5)
chisq.test(data)
nrow(Wm)
round(sum(diag(Wm%*%t(Wm)),5)
round(sum(diag(Wm%*%t(Wm)),5)
round(sum(diag(Wm%*%t(Wm))),5)
round(sum(diag(Wm%*%t(Wm))),5)
chisq.test(data)
##STARTING K##
#Squared lengths of the rows of Wm.
round(diag(Wm%*%t(Wm)),5)
#confirming that trace(Wm*Wm') = Chi^2/n
round(sum(diag(Wm%*%t(Wm))),5)
chisq.test(data)
install.packages(vcd)
library(vcd)
install.packages("vcd")
library(vcd)
library(Stat2Data)
data(Suicide)
as.matrix(structable(~ sex + method2 + age.group, data= Suicide))
q2Data = as.matrix(structable(~ sex + method2 + age.group, data= Suicide))
head(q2Data)
abbr(rownames(q2Data))
abbreviate(rownames(q2Data))
rownames(q2Data) = abbreviate(rownames(q2Data))
head(q2Data)
n = sum(q2Data)
n
P = q2Data / n
data(Suicide)
N = as.matrix(structable(~ sex + method2 + age.group, data= Suicide))
rownames(N) = abbreviate(rownames(N))
head(N)
n = sum(N)
P = N / n
P = N / n;O
P = N / n;P
##Starting A##
library(vcd)
library(Stat2Data)
data(Suicide)
N = as.matrix(structable(~ sex + method2 + age.group, data= Suicide))
rownames(N) = abbreviate(rownames(N))
n = sum(N)
P = N / n;
round(P,3)
r = apply(P,1,sum);round(r,2)
c = apply(P,2,sum);round(c,2)
Ps = diag(1/r)%*%P%*%diag(1/sqrt(c));Ps
Ps = diag(1/r)%*%P%*%diag(1/sqrt(c));round(Ps,2)
W = diag(1/sqrt(r))%*%P%*%diag(1/sqrt(c)); round(W,3)
Wm = diag(1/sqrt(r))%*%(P-cbind(r) %*% rbind(c)) %*% diag(1/sqrt(c));round(Wm,3)
svd(Wm)
q2svd = svd(Wm)
round(q2svd,3)
U = q2svd$u
E = q2svd$v
round(U,3)
round(E,3)
U = q2svd$u[,1:7]
round(U,3)
E = q2svd$v[,1:7]
round(E,3)
Fr = Ps%*%E
Fr = Ps%*%E;round(Fr,3)
plot(ca(data),map="symmetric",mass=c(TRUE,TRUE), contrib=c("absolute","absolute"))
plot(ca(N),map="symmetric",mass=c(TRUE,TRUE), contrib=c("absolute","absolute"))
plot(ca(N),map="symmetric")
N
N = as.matrix(structable(sex + method2 + age.group, data= Suicide))
N = as.matrix(structable(~ sex + method2 + age.group, data= Suicide))
rownames(N) = abbreviate(rownames(N))
rownames(N) = abbreviate(rownames(N));head(N)

##Starting A##
library(vcd)
library(Stat2Data)
data(Suicide)
N = as.matrix(structable(~ sex + method2 + age.group, data= Suicide))
rownames(N) = abbreviate(rownames(N));head(N)
n = sum(N)
P = N / n;
round(P,3)
##Starting B##
r = apply(P,1,sum);round(r,2)
c = apply(P,2,sum);round(c,2)
Ps = diag(1/r)%*%P%*%diag(1/sqrt(c));round(Ps,2)
##Starting C##
W = diag(1/sqrt(r))%*%P%*%diag(1/sqrt(c))
Wm = diag(1/sqrt(r))%*%(P-cbind(r) %*% rbind(c)) %*% diag(1/sqrt(c));round(Wm,3)
q2svd = svd(Wm)
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
q2svd = lapply(svd(Wm),round,2)
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
U = q2svd$u;U
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
##Starting C##
W = diag(1/sqrt(r))%*%P%*%diag(1/sqrt(c))
Wm = diag(1/sqrt(r))%*%(P-cbind(r) %*% rbind(c)) %*% diag(1/sqrt(c));round(Wm,3)
q2svd = lapply(svd(Wm),round,2)
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
plot(ca(N[,1:2]),map="symmetric", mass = c(TRUE,TRUE), contrib=c("absolute","absolute"))
N[1,]
N[,1:2]
N[,1]
N[,2]
plot(ca(N[,1:2]),map="symmetric", mass = c(TRUE,TRUE), contrib=c("absolute","absolute"))
N[,1:2]
N[,1:2]
Wm
E
plot3d
install.packages("plot3D")
library(plot3d)
q2svd = lapply(svd(Wm),round,7)
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
Fr = Ps%*%E;round(Fr,3)
q2svd = lapply(svd(Wm),round,2)
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
Fr = Ps%*%E;round(Fr,3)
q2svd = lapply(svd(Wm),round,7)
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
Fr = Ps%*%E;round(Fr,3)
q2svd = lapply(svd(W),round,7)
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
U = q2svd$u;U
U = q2svd$u[,1:7];U
E = q2svd$v[,1:7];E
Lhalf = q2svd$d[-1];Lhalf
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(c))%*%E;CRow
c
r
Wmtilde = Lhalf[1]*U[,1]%*%t(E[,1]); Wmtilde
Lhalf = q2svd$d[-1];Lhalf
Wmtilde = Lhalf[1]*U[,1]%*%t(E[,1]); Wmtilde
plot3d(ca(N),map="rowprincipal")
library(plot3D)
plot3d(ca(N),map="rowprincipal")
plot3D(ca(N),map="rowprincipal")
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(c))%*%E;CRow
N
U = q2svd$u;U
E = q2svd$v;E
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(c))%*%E;CRow
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
q2svd = (svd(W)
U = q2svd$u;U
q2svd = (svd(W))
U = q2svd$u[,-1];U
E = q2svd$v[,-1];E
Lhalf = q2svd$d[-1];Lhalf
Wmtilde = Lhalf[1]*U[,1]%*%t(E[,1]); Wmtilde
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(c))%*%E;CRow
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
library(rgl)
install.packages("rgl")
library(rgl)
library("rgl")
plot3d(ca(N),map="rowprincipal")

##Starting C##
W = diag(1/sqrt(r))%*%P%*%diag(1/sqrt(c))
Wm = diag(1/sqrt(r))%*%(P-cbind(r) %*% rbind(c)) %*% diag(1/sqrt(c));round(Wm,3)
q2svd = (svd(W))
U = q2svd$u[,-1];U
E = q2svd$v[,-1];E
Lhalf = q2svd$d[-1];Lhalf
Wmtilde = Lhalf[1]*U[,1]%*%t(E[,1]); Wmtilde
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(c))%*%E;CRow
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
##Starting D##
RRow = Ps%*%E;RRow
CRow = diag(1/sqrt(c))%*%E;CRow
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
plot(CRow[,1],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=c("a","b","c","d"));text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
CRow[,1]
CRow[,1:2]
plot(CRow[,1],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=1:8);text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
plot(CRow[,1],type="n",xlab="X",ylab="Y",xlim=c(0,4),main="Row Principle"); text(CRow,labels=1:8);text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
plot(CRow[,1],type="n",xlab="X",ylab="Y",xlim=c(0,4),main="Row Principle"); text(CRow[,1],labels=1:8);abline(h=0,lty=2);abline(v=0,lty=2)
plot(CRow[,1],type="n",xlab="X",ylab="Y",xlim=c(0,9),main="Row Principle"); text(CRow[,1],labels=1:8);abline(h=0,lty=2);abline(v=0,lty=2)
plot3d(ca(N),map="rowprincipal")
plot(CRow[,1],type="n",xlab="X",ylab="Y",xlim=c(0,4),main="Row Principle"); text(CRow,labels=1:8);text(RRow[,1:2],labels=1:5, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
install.packages(rgl)
install.packages("rgl")
library("rgl")
install.packages("rgl")
library("rgl")
plot3d(ca(N),map="rowprincipal")
E
colnames(N)
rownames(E) = colnames(N)
E
##Starting E##
Fr = Ps%*%E;round(Fr,3)
rownames(E) = colnames(N)
E
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=colnames(N));text(RRow[,1:2],labels=1:8, cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
plot(CRow[,1:2],type="n",xlab="X",ylab="Y",main="Row Principle"); text(CRow,labels=colnames(N));text(RRow[,1:2],labels=rownames(N), cex=.9,col=4);abline(h=0,lty=2);abline(v=0,lty=2)
##Starting F##
plot(ca(N),map="symmetric",mass=c(TRUE,TRUE),contrib=c("absolute","absolute"))
##STARTING G##
plot3d(ca(N),map="rowprincipal")
q3g = glm(Survived~Age + SexCode + First + Second + I(Age*Sex), family="binomial")
q3g = glm(Survived~Age + SexCode + First + Second + I(Age*Sex), family="binomial", data = Titanic2)
q3g = glm(Survived~Age + SexCode + First + Second + I(Age*SexCode), family="binomial", data = Titanic2)
q3g = glm(Survived~Age + SexCode + First + Second + I(Age*SexCode), family="binomial", data = Titanic2)
summary(q3g)
overallGLM
anova(q3g,overallGLM)
permcolg
with(permcolg(c(Age,SexCode,First,Second,I(Age*Sex)),Survived,c(I(First*SexCode),I(Second*SexCode))),data = Titanic2)
with(permcolg(c(Age,SexCode,First,Second,I(Age*Sex)),Survived,c(I(First*SexCode))),data = Titanic2)
with(permcolg(c(Age,SexCode,First,Second,I(Age*SexCode)),Survived,c(I(First*SexCode))),data = Titanic2)
dim(Age)
attach(Titanic2)
dim(Age)
nrow(Age)
Age
SexCode
ncol(SexCode)
nrow(SexCode)
nrow(Titanic2$SexCode)
ncol(Titanic2$SexCode)
len(Titanic2$SexCode)
I(Age*SexCode)
with(permcolg(c(Age,SexCode,First,Second,I(Age*SexCode)),Survived,c(I(First*SexCode))),data = Titanic2)
with(permcolg(c(Age,SexCode,First,Second),Survived,c(I(First*SexCode))),data = Titanic2)
with(permcolg(c(Age,SexCode,First,I(Age*SexCode)),Survived,c(I(First*SexCode))),data = Titanic2)
with(permcolg(c(Age,First,,I(Age*SexCode)),Survived,c(I(First*SexCode))),data = Titanic2)
with(permcolg(c(SexCode,First,Second,I(Age*SexCode)),Survived,c(I(First*SexCode))),data = Titanic2)
with(permcolg(c(Age,SexCode,Second,I(Age*SexCode)),Survived,c(I(First*SexCode))),data = Titanic2)
1-pchisq(17.128,2)
with(permcolg(cbind(Age,SexCode,First,Second,I(Age*SexCode)),Survived,c(I(First*SexCode))),data = Titanic2)
with(permcolg(cbind(Age,SexCode,First,Second,I(Age*SexCode)),Survived,cbind(I(First*SexCode),I(Second*SexCode))),data = Titanic2)
data(FirstYearGPA)
lm(GPA~FirstGen,data=FirstYearGPA)
gpalm = lm(GPA~FirstGen,data=FirstYearGPA)
summary(gpalm)
gpaGLM = glm(FirstGen~GPA, family = "binomial", data = FirstYearGPA)
summary(gpaGLM)
with(permcolg(c(),FirstGen,c(GPA),data=FirstYearGPA))
with(permcolg(cbind(),FirstGen,cbind(GPA),data=FirstYearGPA))
with(permcolg(cbind(),FirstGen,cbind(GPA),data=FirstYearGPA))
with(permcolg(cbind(Age,SexCode,First,Second,I(Age*SexCode)),Survived,cbind(I(First*SexCode),I(Second*SexCode))),data = Titanic2)
with(permcolg(cbind(),FirstGen,cbind(GPA),data=FirstYearGPA))
with(permcolg(cbind(),FirstGen,cbind(GPA)),data=FirstYearGPA)
null_model = glm(FirstGem~1, data= FirstYearGPA, family="binomial")
null_model = glm(FirstGem~1, family="binomial", data= FirstYearGPA)
null_model = glm(FirstGen~1, family="binomial", data= FirstYearGPA)
summary(null_model)
anova(null_model,gpaGLM)
with(permcolg(X=NULL, y=FirstGen, V=GPA, n=1000),data=FirstYearGPA)
require(graphics)
library("RSQLite")
library(leaps)
setwd("~/Dropbox/personal/predict/python")
drv = dbDriver("SQLite")
con = dbConnect(drv,"predict.db")
dbListTables(con)
gameid <- dbGetQuery(con, "select * from gameData where injury = 'NULL';");
gameid
gameid$Name
head(gameid)
attach(gameid)
nrow(gameid)
head(Name)
head(gameid)
data = cbind(Name,minutes,fgm,fga,tpm,tpa,ftm,fta,oreb,dreb,reb,assist,steal,block,turnover,fouls,plus_minus,points)
head(data)
head(as.numeric(data$fgm))
as.numeric(data$fgm)
data
plot(ca(data),map="rowprincipal")
N
data = cbind(Name,minutes,fgm,fga,tpm,tpa,ftm,fta,oreb,dreb,reb,assist,steal,block,turnover,fouls,plus_minus,points)
plot(ca(data),map="symmetric",mass=c(TRUE,TRUE),contrib=c("absolute","absolute"))
head(gameid)
gameid <- dbGetQuery(con, "select sum(minutes),sum(fgm),sum(fga) from gameData where injury = 'NULL' group by teamID;");
gameid
head(gameid)
gameid <- dbGetQuery(con, "select teamID, sum(minutes),sum(fgm),sum(fga) from gameData where injury = 'NULL' group by teamID;");
head(gameid)
gameid <- dbGetQuery(con, "select teamID, sum(minutes),sum(fgm),sum(fga),sum(tpm),sum(tpa),sum(ftm),sum(fta),sum(oreb),sum(dreb),sum(reb),sum(assist),sum(steal),sum(block),sum(turnover),sum(fouls),sum(plus_minus),sum(points) from gameData where injury = 'NULL' group by teamID;");
head(gameid)
rownames(gameid) = gameid[,1]
head(gameid)
gameid = gameid[,-1]
head(gameid)
gameid <- dbGetQuery(con, "select teamID, sum(minutes),sum(fgm),sum(fga),sum(tpm),sum(tpa),sum(ftm),sum(fta),sum(oreb),sum(dreb),sum(reb),sum(assist),sum(steal),sum(block),sum(turnover),sum(fouls),sum(plus_minus),sum(points) from gameData where injury = 'NULL' group by teamID;");
attach(gameid)
rownames(gameid) = gameid[,1]
gameid = gameid[,-1]
head(gameid)
gameid
nrow(gameid)
dim(gameid)
plot(ca(gameid),map="symmetric")
gameid <- dbGetQuery(con, "select teamID, sum(minutes),sum(fgm),sum(fga),sum(tpm),sum(tpa),sum(ftm),sum(fta),sum(oreb),sum(dreb),sum(reb),sum(assist),sum(steal),sum(block),sum(turnover),sum(fouls),sum(points) from gameData where injury = 'NULL' group by teamID;");
attach(gameid)
rownames(gameid) = gameid[,1]
gameid = gameid[,-1]
head(gameid)
plot(ca(gameid),map="symmetric")
plot(ca(gameid),map="rowprincipal")
plot(ca(gameid),map="colprincipal")
eigen(gameid)
scale(gameid, scale=TRUE)
scaled = scale(gameid, scale=TRUE)
eigen(scaled)
princomp(scaled)
principle = princomp(scaled)
summary(principle)
principle
principle$Comp.1
principle$Comp
principle$values
Ms = scale(gameid, scale=TRUE)
E = eigen(gameid)
cor = cor(gameid)
E = eigen(cor)
E
sort(E$values)
eigen_scales = E$values
eigen_scales
eigen_scales = round(E$values,3)
eigen_scales
Ms%*%E
Ms%*%E$vectors
Prin_comps = Ms%*%E$vectors
data = prin_comps[,1:3]
data = Prin_comps[,1:3]
data
t(data)
rownames(data) = c("Pr1","Pr2","Pr3")
rownames(data)
data
data = t(data)
data
data = Prin_comps[,1:3]
data = t(data)
rownames(data) = c("Pr1","Pr2","Pr3")
data
plot(ca(data),map="rowprincipal")
plot(data[,1:2])
plot(data[1:2,])
plot(data)
data
plot(data[1:2,])
E
x
x
cri
cri
cri
